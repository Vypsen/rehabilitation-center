version: '3.0'

services:

  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
    depends_on:
      - php-fpm
      - pgsql
    restart: always
    volumes:
      - .:/var/www/project
    ports:
      - "8080:80"
    networks:
      - app

  php-fpm:
    container_name: php
    build:
      context: ./docker/php7.4-fpm
    restart: always
    volumes:
      - .:/var/www/project
    ports:
      - "9000:9000"
    networks:
      - app

  pgsql:
    container_name: pgsql
    image: postgres:14.5
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgresql:/var/lib/postgresql/data/
    networks:
      - app

  node:
    image: node:latest
    container_name: node
    volumes:
      - .:/var/www/project
    working_dir: /var/www/project
    networks:
      - app

  redis:
    image: redis:3.2.10
    networks:
      - app

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  app:
volumes:
  postgresql:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
